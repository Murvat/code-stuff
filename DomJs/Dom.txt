Навигация:
Для всех узлов:
parentNode,
childNodes,
firstChild,
lastChild,
previousSibling,
nextSibling.

Только для узлов-элементов:
parentElement,
children,
firstElementChild,
lastElementChild,
previousElementSibling,
nextElementSibling.

Дополнительные методы и свойства для работы с дочерними элементами:

elem.hasChildNodes()
// возвращает true, если элемент имеет дочерние узлы, и false в противном случае.

children
// коллекция детей, которые являются элементами.

firstElementChild,
lastElementChild
// первый и последний дочерний элемент.

previousElementSibling,
nextElementSibling
// соседи-элементы.

parentElement
// родитель-элемент.

table.rows
// коллекция строк <tr> таблицы.

table.caption/tHead/tFoot
// ссылки на элементы таблицы <caption>, <thead>, <tfoot>.
table.tBodies
// коллекция элементов таблицы <tbody> (в спецификациях их может быть больше одного).

<thead>, <tfoot>, <tbody>
// предоставляют свойство rows:
  tbody.rows
  // коллекция строк <tr> секции.

<tr>
// tr.cells
  // коллекция <td> и <th> ячеек, находящихся внутри строки <tr>.
  tr.sectionRowIndex
  // номер строки <tr> в текущей секции <thead>/<tbody>/<tfoot>.
  tr.rowIndex
  // номер строки <tr> в таблице (включая все строки таблицы).

<td> и <th>:
  td.cellIndex
  // номер ячейки в строке <tr>.

Поиск элементов в DOM:

getElement*
// возвращает элемент(ы) с заданным именем тега, например, getElementById, getElementsByTagName.

querySelector
// возвращает первый элемент, соответствующий указанному CSS-селектору.

document.getElementById или просто id
// возвращает элемент по его уникальному идентификатору (id).

querySelectorAll
// возвращает все элементы, соответствующие указанному CSS-селектору.

elem.querySelector(css)
// возвращает первый элемент внутри элемента elem, соответствующий указанному CSS-селектору.

matches
// проверяет, соответствует ли элемент указанному CSS-селектору.

elem.closest(css)
// возвращает ближайший родительский элемент, соответствующий указанному CSS-селектору.

elem.getElementsByTagName(tag)
// возвращает коллекцию элементов с указанным тегом.

elem.getElementsByClassName(className)
// возвращает коллекцию элементов, которые имеют указанный CSS-класс.

document.getElementsByName(name)
// возвращает коллекцию элементов с заданным атрибутом name.

Свойства узлов:
nodeType: Тип DOM-узла.
nodeName/tagName: Название тега у элемента (только для чтения).
nodeValue/data: Содержимое узла-неэлемента (можно изменять).
textContent: Текст внутри элемента (можно изменять).
innerHTML: Внутреннее HTML-содержимое узла-элемента (можно изменять).
outerHTML: Полный HTML узла-элемента (запись не изменяет элемент, а заменяет его во внешнем контексте).
hidden: Скрывает элемент при значении true (аналог display: none в CSS).

++++
Атрибуты и свойства:
Методы для работы с атрибутами:
elem.hasAttribute(name)
// проверить на наличие.
elem.getAttribute(name)
// получить значение.
elem.setAttribute(name, value)
// установить значение.=
elem.removeAttribute(name)
// удалить атрибут.

elem.attributes
// это коллекция всех атрибутов.

Методы для создания узлов:
document.createElement(tag)
// создаёт элемент с заданным тегом,

document.createTextNode(value)
// создаёт текстовый узел (редко используется),

elem.cloneNode(deep)
// клонирует элемент, если deep==true, то совсеми дочерними элементами.
Вставка и удаление:

node.append(...nodes or strings)
// вставляет в node в конец,

node.prepend(...nodes or strings)
// вставляет в node в начало,

node.before(...nodes or strings)
// вставляет прямо перед node,

node.after(...nodes or strings)
// вставляет сразу после node,

node.replaceWith(...nodes or strings)
// заменяет node.
node.remove()
// удаляет node.

Устаревшие методы:
parent.appendChild(node)
parent.insertBefore(node, nextSibling)
parent.removeChild(node)
parent.replaceChild(newElem, node)

Все эти методы возвращают node.

Если нужно вставить фрагмент HTML, то elem.insertAdjacentHTML(where, html) вставляет в зависимости от where:
"beforebegin" – вставляет html прямо перед elem,
"afterbegin" – вставляет html в elem в начало,
"beforeend" – вставляет html в elem в конец,
"afterend" – вставляет html сразу после elem.

Также существуют похожие методы elem.insertAdjacentText и elem.insertAdjacentElement, ə
они вставляют текстовые строки и элементы, но они редко используются.

Чтобы добавить HTML на страницу до завершения её загрузки:
document.write(html)

После загрузки страницы такой вызов затирает документ. В основном встречается в старых скриптах.

Методы и свойства для работы с классами и стилями:

Свойства:

classList: Коллекция классов элемента.
Методы classList:
2. add("class"): Добавляет указанный класс элементу.

remove("class"): Удаляет указанный класс из элемента.
toggle("class"): Добавляет класс, если его нет, и удаляет, если есть.
contains("class"): Проверяет наличие указанного класса, возвращает true или false.
Свойства и методы для работы со стилями:
6. style: Объект, представляющий стили элемента.

Методы getComputedStyle:
7. getComputedStyle(element, [pseudo]): Возвращает объект, представляющий вычисленные стили элемента.
 Параметр [pseudo] (необязательный) позволяет получить стили псевдоэлемента, если указан.

Вот некоторые свойства и методы, связанные с измерением и положением элементов в DOM:

offsetParent: Свойство, возвращающее ближайший родительский элемент, который является 
контейнером для позиционирования элемента.

offsetLeft/offsetTop: Свойства, возвращающие расстояние от левого/верхнего края элемента до 
левого/верхнего края его offsetParent.

offsetWidth/offsetHeight: Свойства, возвращающие ширину и высоту элемента включая его рамку и полосу прокрутки, но исключая отступы.

clientTop/clientLeft: Свойства, возвращающие толщину верхней/левой границы элемента (обычно рамки) в пикселях.

clientWidth/clientHeight: Свойства, возвращающие ширину и высоту содержимого элемента, включая его рамку и 
внутренние отступы, но исключая полосы прокрутки.

scrollWidth/scrollHeight: Свойства, возвращающие ширину и высоту элемента, включая его содержимое, рамку и внутренние отступы, 
но не включая полосы прокрутки.

scrollLeft/scrollTop: Свойства, предоставляющие или устанавливающие количество пикселей, на которое элемент прокручен влево 
или вверх относительно своего начального положения.



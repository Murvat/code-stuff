Общие:
nodeType: Возвращает тип узла (1 - элемент, 2 - атрибут, 3 - текст и т.д.).
nodeName: Возвращает имя узла.
nodeValue: Возвращает текстовое содержимое узла.
attributes: Возвращает коллекцию атрибутов элемента.
textContent: Возвращает или устанавливает текстовое содержимое элемента.
innerHTML: Возвращает или устанавливает HTML-код внутри элемента.
outerHTML: Возвращает или устанавливает HTML-код элемента, включая его теги.

Получение и установка атрибутов:
getAttribute(name): Возвращает значение атрибута с указанным именем.
setAttribute(name, value): Устанавливает значение атрибута с указанным именем.
removeAttribute(name): Удаляет атрибут с указанным именем.
hasAttribute(name): Проверяет, существует ли атрибут с указанным именем.

Работа с классами:
classList.add(value): Добавляет класс к элементу.
classList.remove(value): Удаляет класс из элемента.
classList.toggle(value): Переключает класс элемента (добавляет, если его нет, и удаляет, если есть).
classList.contains(value): Проверяет, содержит ли элемент указанный класс.

Работа со стилями:
style.getPropertyValue(name): Возвращает значение свойства CSS с указанным именем.
style.setProperty(name, value): Устанавливает значение свойства CSS с указанным именем.
style.removeProperty(name): Удаляет свойство CSS с указанным именем.
Работа с формой:

submit(): Отправляет форму.
reset(): Сбрасывает форму к исходному состоянию.
Работа с изображениями:

complete: Возвращает true, если изображение загружено.
naturalWidth: Возвращает исходную ширину изображения.
naturalHeight: Возвращает исходную высоту изображения.

Работа со ссылками:
click(): Имитирует щелчок по ссылке.
hreflang: Возвращает или устанавливает язык страницы, на которую ссылается ссылка.

Работа с таблицами:
insertRow(index): Вставляет новую строку в таблицу.
deleteRow(index): Удаляет строку из таблицы.
insertCell(index): Вставляет новую ячейку в строку таблицы.
deleteCell(index): Удаляет ячейку из строки таблицы.

Работа с ячейками таблицы:
colSpan: Возвращает или устанавливает количество столбцов, занимаемых ячейкой.
rowSpan: Возвращает или устанавливает количество строк, занимаемых ячейкой.

Свойства:
id: Возвращает или устанавливает ID элемента.
className: Возвращает или устанавливает имя класса элемента.
classList: Возвращает объект, представляющий список классов элемента.
style: Возвращает объект, представляющий стиль элемента.
tagName: Возвращает имя тега элемента.
parentNode: Возвращает родительский элемент.
childNodes: Возвращает коллекцию дочерних элементов.
firstChild: Возвращает первый дочерний элемент.
lastChild: Возвращает последний дочерний элемент.
nextSibling: Возвращает следующий элемент.
previousSibling: Возвращает предыдущий элемент.

Методы:
addEventListener: Добавляет обработчик события к элементу.
removeEventListener: Удаляет обработчик события с элемента.
querySelector: Находит первый элемент, соответствующий CSS-селектору.
querySelectorAll: Находит все элементы, соответствующие CSS-селектору.
getElementsByTagName: Находит все элементы с заданным тегом.
getElementsByClassName: Находит все элементы с заданным классом.
getElementById: Находит элемент по его ID.
insertBefore: Вставляет новый элемент перед заданным элементом.
appendChild: Добавляет новый элемент в конец списка дочерних элементов.
removeChild: Удаляет элемент из списка дочерних элементов.
replaceChild: Заменяет один элемент другим.
cloneNode: Клонирует элемент.
normalize: Убирает лишние пробелы из текстового содержимого элемента.

Свойства и методы CSS:
style.width: Возвращает или устанавливает ширину элемента.
style.height: Возвращает или устанавливает высоту элемента.
style.color: Возвращает или устанавливает цвет элемента.
style.backgroundColor: Возвращает или устанавливает фоновый цвет элемента.
style.display: Возвращает или устанавливает видимость элемента.
style.position: Возвращает или устанавливает позиционирование элемента.
classList.add: Добавляет класс к элементу.
classList.remove: Удаляет класс из элемента.
classList.contains: Проверяет, содержит ли элемент заданный класс.

Создание элемента:
document.createElement(tag)
document.createTextNode(text)
Методы вставки
parentElem.appendChild(node)
parentElem.insertBefore(node, nextSibling)
parentElem.replaceChild(node, oldChild)
node.append(...nodes or strings)– добавляет узлы или строки вконец node
node.prepend(...nodes or strings)– вставляет узлы или строки вначало node
node.before(...nodes or strings) - вставляет узлы или строки до node
node.after(...nodes or strings)- вставляет узлы или строки после node
node.replaceWith(...nodes or strings)- заменяет node заданными узлами или строками.
elem.insertAdjacentHTML(where, html):
"beforebegin" – вставить html непосредственно перед elem , 
"afterbegin" – вставить html в начало elem , 
"beforeend" – вставить html в конец elem , 
"afterend" – вставить html непосредственно после elem
elem.insertAdjacentText(where, text) – такой же синтаксис, нострока text вставляется
 «как текст», вместо HTML,
elem.insertAdjacentElement(where, elem)– такой же синтаксис, новставляет элемент elem
node.remove().
elem.cloneNode(true).
document.write()

События:
click: Событие, которое происходит при щелчке по элементу.
mouseenter: Событие, которое происходит при наведении курсора на элемент.
mouseleave: Событие, которое происходит при выводе курсора из элемента.
keydown: Событие, которое происходит при нажатии клавиши.
keyup: Событие, которое происходит при отпускании клавиши.

Формы:
value: Возвращает или устанавливает значение элемента формы.
checked: Возвращает или устанавливает флажок элемента формы.
selected: Возвращает или устанавливает выбранный элемент списка.
Основные типы событий:

События мыши: click, mousedown, mouseup, mousemove, mouseover, mouseout
События клавиатуры: keydown, keyup, keypress
События формы: submit, change, focus, blur
События окна: resize, scroll, load, unload
События DOM: DOMContentLoaded, readystatechange

Свойства объекта события:
type: Тип события (например, click, keydown, submit).
target: Элемент, на котором произошло событие.
clientX/clientY: Координаты мыши относительно окна браузера.
keyCode: Код нажатой клавиши.
preventDefault: Отменяет стандартное действие события.
stopPropagation: Прекращает распространение события.
button: Кнопка мыши, которая была нажата (0 - левая, 1 - средняя, 2 - правая).
altKey: Была ли нажата клавиша Alt.
ctrlKey: Была ли нажата клавиша Ctrl.
shiftKey: Была ли нажата клавиша Shift.
metaKey: Была ли нажата клавиша Meta (обычно Windows).
relatedTarget: Элемент, с которого курсор переместился на текущий элемент (при событиях mouseover и mouseout).
detail: Дополнительная информация о событии (например, количество щелчков мыши).

Методы объекта события:
initEvent: Инициализирует объект события.
preventDefault: Отменяет стандартное действие события.
stopPropagation: Прекращает распространение события.
stopImmediatePropagation: Прекращает распространение события и его обработку в текущем элементе.
composedPath: Возвращает массив элементов, через которые прошло событие.

Свойства элемента:
onclick: Обработчик события click.
onkeydown: Обработчик события keydown.
onkeyup: Обработчик события keyup.
onmousemove: Обработчик события mousemove.
onmouseover: Обработчик события mouseover.
onmouseout: Обработчик события mouseout.
onsubmit: Обработчик события submit.
onchange: Обработчик события change.
onfocus: Обработчик события focus.
onblur: Обработчик события blur.

Методы элемента:
addEventListener: Добавляет обработчик события.
removeEventListener: Удаляет обработчик события.
dispatchEvent: Инициирует событие.

События мыши:
click
dblclick
mousedown
mouseup
mousemove
mouseover
mouseout
contextmenu

События клавиатуры:
keydown
keypress
keyup

События форм:
submit
change
input
focus
blur
select

События окна и документа:
load
resize
scroll
unload
DOMContentLoaded
hashchange
beforeunload

Другие события:
dragstart
dragenter
dragover
dragleave
drop
error
offline
online
transitionend
animationend
popstate
storage
message

Методы:
Получение элементов:
getElementById()
getElementsByClassName()
getElementsByTagName()
querySelector()
querySelectorAll()

Манипуляции с классами:
classList.add()
classList.remove()
classList.toggle()
classList.contains()

Работа с атрибутами:
getAttribute()
setAttribute()
removeAttribute()

Стили и CSS:
style.setProperty()
style.getPropertyValue()
getComputedStyle()

Добавление и удаление элементов:
appendChild()
removeChild()
createElement()
cloneNode()
insertBefore()

События:
addEventListener()
removeEventListener()
dispatchEvent()

Свойства:
Свойства элементов:
innerHTML
textContent
value
src
href
className
id
 
Свойства окна и документа:
window.location
window.navigator
document.cookie
document.title
document.URL

offsetParent – ближайший CSS-позиционированный родитель или ближайший td, th , table, body .
offsetLeft/offsetTop – позиция в пикселях верхнего левого углаотносительно offsetParent .
offsetWidth/offsetHeight – «внешняя» ширина/высота элемента,включая рамки.
clientLeft/clientTop – расстояние от верхнего левого внешнего угла довнутренного.
 Для операционных систем с ориентацией слева-направо этисвойства равны ширинам левой/верхней рамки. 
 Если язык ОС таков, чтоориентация справа налево, так что вертикальная полоса прокрутки находитсяне справа, а слева, то
clientLeft- включает в своё значение её ширину.
clientWidth/clientHeight – ширина/высота содержимого вместе свнутренними отступами padding , но без полосы прокрутки.
scrollWidth/scrollHeight – ширины/высота содержимого, аналогично clientWidth/Height , но учитывают прокрученную, невидимую областьэлемента.
scrollLeft/scrollTop – ширина/высота прокрученной сверху частиэлемента, считается от верхнего левого угла.
Прокрутка: scrollTo, scrollBy, scrollIntoView.
Прокрутку окна можно получить так:
window.pageYOffset/pageXOffset.
Изменить текущую прокрутку:
window.scrollTo(pageX,pageY) – абсолютные координаты,
window.scrollBy(x,y) – прокрутка относительно текущего места,
elem.scrollIntoView(top) – прокрутить страницу так, чтобы сделать elem видимым
(выровнять относительно верхней/нижней части окна).